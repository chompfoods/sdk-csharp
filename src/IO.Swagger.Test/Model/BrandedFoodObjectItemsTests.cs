/* 
 * Chomp Food & Recipe Database API Documentation
 *
 * ## Important An **[API key](https://chompthis.com/api/)** is required for access to this API. * Get a **Food Data API** key at **[https://chompthis.com/api](https://chompthis.com/api/)**. * Get a **Recipe Data API** key at **[https://chompthis.com/api/recipes](https://chompthis.com/api/recipes/)**.  ### Getting Started   * Subscribe to the **[Food Data API](https://chompthis.com/api/#pricing)** or the **[Recipe Data API](https://chompthis.com/api/recipes/#pricing)**.   * Scroll down and click the \"**Authorize**\" button.   * Enter your API key into the \"**value**\" input, click the \"**Authorize**\" button, then click the \"**Close**\" button.   * Scroll down to the section titled \"**default**\" and click on the API endpoint you wish to use.   * Click the \"**Try it out**\" button.   * Enter the information the endpoint requires.   * Click the \"**Execute**\" button.  ### Example    * Branded food response object: **[View example &raquo;](https://raw.githubusercontent.com/chompfoods/examples/master/branded-food-response-object.json)**   * Ingredient response object: **[View example &raquo;](https://raw.githubusercontent.com/chompfoods/examples/master/ingredient-response-object.json)**   * Recipe response object: **[View example &raquo;](https://raw.githubusercontent.com/chompfoods/examples/master/example-recipe-response.json)**   * Error response object: **[View example &raquo;](https://raw.githubusercontent.com/chompfoods/examples/master/error-response-object.json)**  ### How Do I Find My API Key?   * Your API key was sent to the email address you used to create your subscription.   * You will also find your API key in the **[Client Center](https://chompthis.com/api/manage.php)**.   * Read **[this article](https://desk.zoho.com/portal/chompthis/kb/articles/how-do-i-find-my-api-key)** for more information.  ### I'm a Premium subscriber. How do I access the API?   * All Premium subscribers must pass in a unique user ID for each user on their platform that is accessing data from the Chomp API. A user ID can be any string of letters and numbers that you assign to your user. Simply add \"user_id\" as a URL parameter when calling the API. *You must add a \"user_id\" URL parameter to every call you make to ANY endpoint.*     * **Example**        > ```ENDPOINT.php?api_key=API_KEY&code=CODE&user_id=USER_ID```  ### Helpful Links   * **Help & Support**     * [Knowledge Base &raquo;](https://desk.zoho.com/portal/chompthis/kb/chomp)     * [Support &raquo;](https://chompthis.com/api/ticket-new.php)     * [Client Center &raquo;](https://chompthis.com/api/manage.php)   * **Pricing**     * [Food Data API Subscription Options &raquo;](https://chompthis.com/api/)     * [Recipe Data API Subscription Options &raquo;](https://chompthis.com/api/recipes/)     * [Food Data API Cost Calculator &raquo;](https://chompthis.com/api/cost-calculator.php)     * [Recipe Data API Cost Calculator &raquo;](https://chompthis.com/api/recipes/cost-calculator.php)   * **Guidelines**     * [Terms & License &raquo;](https://chompthis.com/api/terms.php)     * [Attribution &raquo;](https://chompthis.com/api/docs/attribution.php) 
 *
 * OpenAPI spec version: 1.0.0-oas3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing BrandedFoodObjectItems
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class BrandedFoodObjectItemsTests
    {
        // TODO uncomment below to declare an instance variable for BrandedFoodObjectItems
        //private BrandedFoodObjectItems instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of BrandedFoodObjectItems
            //instance = new BrandedFoodObjectItems();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of BrandedFoodObjectItems
        /// </summary>
        [Test]
        public void BrandedFoodObjectItemsInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" BrandedFoodObjectItems
            //Assert.IsInstanceOfType<BrandedFoodObjectItems> (instance, "variable 'instance' is a BrandedFoodObjectItems");
        }


        /// <summary>
        /// Test the property 'Barcode'
        /// </summary>
        [Test]
        public void BarcodeTest()
        {
            // TODO unit test for the property 'Barcode'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Brand'
        /// </summary>
        [Test]
        public void BrandTest()
        {
            // TODO unit test for the property 'Brand'
        }
        /// <summary>
        /// Test the property 'Ingredients'
        /// </summary>
        [Test]
        public void IngredientsTest()
        {
            // TODO unit test for the property 'Ingredients'
        }
        /// <summary>
        /// Test the property 'Package'
        /// </summary>
        [Test]
        public void PackageTest()
        {
            // TODO unit test for the property 'Package'
        }
        /// <summary>
        /// Test the property 'Serving'
        /// </summary>
        [Test]
        public void ServingTest()
        {
            // TODO unit test for the property 'Serving'
        }
        /// <summary>
        /// Test the property 'Categories'
        /// </summary>
        [Test]
        public void CategoriesTest()
        {
            // TODO unit test for the property 'Categories'
        }
        /// <summary>
        /// Test the property 'Nutrients'
        /// </summary>
        [Test]
        public void NutrientsTest()
        {
            // TODO unit test for the property 'Nutrients'
        }
        /// <summary>
        /// Test the property 'DietLabels'
        /// </summary>
        [Test]
        public void DietLabelsTest()
        {
            // TODO unit test for the property 'DietLabels'
        }
        /// <summary>
        /// Test the property 'DietFlags'
        /// </summary>
        [Test]
        public void DietFlagsTest()
        {
            // TODO unit test for the property 'DietFlags'
        }
        /// <summary>
        /// Test the property 'PackagingPhotos'
        /// </summary>
        [Test]
        public void PackagingPhotosTest()
        {
            // TODO unit test for the property 'PackagingPhotos'
        }
        /// <summary>
        /// Test the property 'Allergens'
        /// </summary>
        [Test]
        public void AllergensTest()
        {
            // TODO unit test for the property 'Allergens'
        }
        /// <summary>
        /// Test the property 'BrandList'
        /// </summary>
        [Test]
        public void BrandListTest()
        {
            // TODO unit test for the property 'BrandList'
        }
        /// <summary>
        /// Test the property 'Countries'
        /// </summary>
        [Test]
        public void CountriesTest()
        {
            // TODO unit test for the property 'Countries'
        }
        /// <summary>
        /// Test the property 'CountryDetails'
        /// </summary>
        [Test]
        public void CountryDetailsTest()
        {
            // TODO unit test for the property 'CountryDetails'
        }
        /// <summary>
        /// Test the property 'PalmOilIngredients'
        /// </summary>
        [Test]
        public void PalmOilIngredientsTest()
        {
            // TODO unit test for the property 'PalmOilIngredients'
        }
        /// <summary>
        /// Test the property 'IngredientList'
        /// </summary>
        [Test]
        public void IngredientListTest()
        {
            // TODO unit test for the property 'IngredientList'
        }
        /// <summary>
        /// Test the property 'HasEnglishIngredients'
        /// </summary>
        [Test]
        public void HasEnglishIngredientsTest()
        {
            // TODO unit test for the property 'HasEnglishIngredients'
        }
        /// <summary>
        /// Test the property 'Minerals'
        /// </summary>
        [Test]
        public void MineralsTest()
        {
            // TODO unit test for the property 'Minerals'
        }
        /// <summary>
        /// Test the property 'Traces'
        /// </summary>
        [Test]
        public void TracesTest()
        {
            // TODO unit test for the property 'Traces'
        }
        /// <summary>
        /// Test the property 'Vitamins'
        /// </summary>
        [Test]
        public void VitaminsTest()
        {
            // TODO unit test for the property 'Vitamins'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Test]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }
        /// <summary>
        /// Test the property 'Keywords'
        /// </summary>
        [Test]
        public void KeywordsTest()
        {
            // TODO unit test for the property 'Keywords'
        }

    }

}
